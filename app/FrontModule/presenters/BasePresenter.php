<?php

namespace Skeleton\FrontModule\Presenters;

use Skeleton\FrontModule\Forms\IFindFormFactory;
use Skeleton\FrontModule\Forms\INewsletterFormFactory;
use Nette\Application\UI\Presenter;
use Skeleton\Model\Category;
use Skeleton\Model\Orm;

abstract class BasePresenter extends Presenter{

    /** @var Orm  */
    protected $orm;

    /**
     * @var INewsletterFormFactory @inject
     */
    public $newsletterFormFactory;

    /**
     * @var IFindFormFactory @inject
     */
    public $findFormFactory;

    public function __construct(Orm $orm)
    {
        parent::__construct();
        $this->orm = $orm;
    }

    public function handleLogOut(){
        $this->getPresenter()->getUser()->logout();
        $this->flashMessage("Logout success");
        $this->getPresenter()->redirect(":Front:UvodniStrana:default");
    }

    public function beforeRender()
    {
        parent::beforeRender(); // TODO: Change the autogenerated stub
        $this->template->parentCategories = $this->getParentCategories();
    }

    public function getParentCategories() {
        return $this->orm->categoryParents->findBy(['parent'=>NULL]);
    }

    public function getChildCategories(Category $category) {
        return $this->orm->categoryParents->findBy(['parent'=>$category]);
    }

    protected function createComponentNewsletterForm(){
        return $this->newsletterFormFactory->create();
    }

    protected function createComponentFindForm(){
        return $this->findFormFactory->create();
    }
}